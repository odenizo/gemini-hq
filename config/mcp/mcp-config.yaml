# MCP (Model Context Protocol) Configuration for Gemini CLI
# This file configures MCP servers and their integration with Gemini CLI

mcp:
  enabled: true
  version: "1.0"
  transport: "stdio"
  timeout: 30
  max_retries: 3

servers:
  # File system operations
  filesystem:
    name: "filesystem"
    enabled: true
    command: "npx"
    args: ["@modelcontextprotocol/server-filesystem", "/path/to/allowed/directory"]
    description: "Access to local filesystem operations"
    capabilities:
      - "read_file"
      - "write_file"
      - "list_directory"
      - "search_files"
    
  # Git operations
  git:
    name: "git"
    enabled: true
    command: "npx"
    args: ["@modelcontextprotocol/server-git"]
    description: "Git repository operations"
    capabilities:
      - "git_status"
      - "git_log"
      - "git_diff"
      - "git_commit"
    
  # Web search and browsing
  brave_search:
    name: "brave-search"
    enabled: false
    command: "npx"
    args: ["@modelcontextprotocol/server-brave-search"]
    description: "Web search capabilities"
    env:
      BRAVE_API_KEY: "${BRAVE_API_KEY}"
    capabilities:
      - "web_search"
      - "fetch_webpage"
    
  # Memory and context management
  memory:
    name: "memory"
    enabled: true
    command: "npx"
    args: ["@modelcontextprotocol/server-memory"]
    description: "Persistent memory and context"
    capabilities:
      - "store_memory"
      - "retrieve_memory"
      - "search_memory"
    
  # Database operations
  sqlite:
    name: "sqlite"
    enabled: false
    command: "npx"
    args: ["@modelcontextprotocol/server-sqlite", "path/to/database.db"]
    description: "SQLite database operations"
    capabilities:
      - "execute_query"
      - "list_tables"
      - "describe_table"
    
  # Time and scheduling
  time:
    name: "time"
    enabled: true
    command: "npx"
    args: ["@modelcontextprotocol/server-time"]
    description: "Time and date operations"
    capabilities:
      - "get_time"
      - "format_time"
      - "time_calculations"
    
  # Google Drive integration
  gdrive:
    name: "gdrive"
    enabled: false
    command: "npx"
    args: ["@modelcontextprotocol/server-gdrive"]
    description: "Google Drive file operations"
    env:
      GOOGLE_DRIVE_CREDENTIALS: "${GOOGLE_DRIVE_CREDENTIALS}"
    capabilities:
      - "list_files"
      - "read_file"
      - "create_file"
      - "search_files"

# Global MCP settings
settings:
  auto_discover: true
  discovery_paths:
    - "~/.mcp/servers"
    - "/usr/local/lib/mcp/servers"
  
  logging:
    level: "INFO"
    file: "~/.gemini/logs/mcp.log"
  
  security:
    sandbox_mode: true
    allowed_commands: ["npx", "node", "python3"]
    blocked_paths:
      - "/etc"
      - "/var"
      - "/usr/bin"
  
  performance:
    max_concurrent_servers: 5
    request_timeout: 30
    keepalive_interval: 60

# Custom server configurations
custom_servers:
  # Example custom server
  example:
    name: "example-server"
    enabled: false
    command: "python3"
    args: ["/path/to/custom/server.py"]
    description: "Example custom MCP server"
    env:
      CUSTOM_API_KEY: "${CUSTOM_API_KEY}"
    capabilities:
      - "custom_operation"

# Integration settings
integration:
  gemini_cli:
    auto_load_servers: true
    server_discovery: true
    fallback_behavior: "graceful"
  
  workspace:
    project_detection: true
    auto_configure_servers: true
    config_inheritance: true